<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="com.escst.commons.shiro.RetryLimitHashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5"/>
		<property name="hashIterations" value="2"/>
		<property name="storedCredentialsHexEncoded" value="true"/>
	</bean>

	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="shiro.session.id"/>
		<property name="path" value="/"/>
		<property name="httpOnly" value="true"/>
		<!--表示浏览器关闭时失效此cookie-->
		<property name="maxAge" value="-1"/>
	</bean>

	<!--记住我的cookie，保存时长30天-->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe"/>
		<property name="httpOnly" value="true"/>
		<!-- 7天,采用spring el计算方便修改！ -->
		<property name="maxAge" value="#{7 * 24 * 60 * 60}"/>
	</bean>

	<!-- rememberMe管理器 cipherKey是加密rememberMe Cookie的秘钥-->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
		<property name="cookie" ref="rememberMeCookie"/>
	</bean>

	<!--配置shiro的安全管理bean-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="systemAuthorizing"/>
		<property name="sessionManager" ref="sessionManager"/>
		<property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
		<property name="arguments" ref="securityManager"/>
	</bean>

	<!--配置进行授权和认证的Realm-->
	<bean id="systemAuthorizing" class="com.escst.commons.shiro.SystemAuthorizing">
		<property name="cachingEnabled" value="false"/>
	</bean>

	<!--用户授权信息cache-->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>

	<!--配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<!--AOP式方法级权限检查-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true"/>
	</bean>

	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>

	<!-- 会话DAO -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
		<property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="120000"/>
		<property name="sessionManager" ref="sessionManager"/>
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="#{30 * 60 * 1000}"/>
		<property name="deleteInvalidSessions" value="true"/>
		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
		<property name="sessionDAO" ref="sessionDAO"/>
		<property name="sessionIdCookieEnabled" value="true"/>
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>

	<!--基于Form表单的身份验证过滤器-->
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="username"/>
		<property name="passwordParam" value="password"/>
		<property name="rememberMeParam" value="rememberMe"/>
		<property name="loginUrl" value="/login"/>
	</bean>

	<bean id="systemAccessControlFilter" class="com.escst.commons.shiro.SystemAccessControlFilter">
		<property name="unauthorizedUrl" value="/index"/>
		<property name="loginUrl" value="/login"/>
	</bean>

	<!-- 启用shiro授权注解拦截方式-->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口，这个属性是必须的 -->
		<property name="securityManager" ref="securityManager"/>
		<!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/login"/>
		<!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->
		<property name="successUrl" value="/index" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter"/>
				<entry key="agentRoles" value-ref="systemAccessControlFilter"/>
			</util:map>
		</property>
		<!-- 用户访问未对其授权的资源时，所显示的连接 -->
		<property name="filterChainDefinitions">
			<value>
				/resources/** = anon
				/login = anon
				/doLogin = anon
				/logout = logout
				/index = authc
				/* = anon
			</value>
		</property>
	</bean>


</beans>