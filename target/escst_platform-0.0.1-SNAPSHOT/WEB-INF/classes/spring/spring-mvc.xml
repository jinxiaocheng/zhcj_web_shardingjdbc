<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:tx="http://www.springframework.org/schema/tx"  
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!--启用spring mvc注解-->
	<context:annotation-config/>

	<!-- use-default-filters默认为true，扫描指定包下面的@Component的类，并注册为bean，@Component的子注解@Service,@Reposity也会注册为bean；
    use-default-filters为false，<context:exclude-filter>指定的不扫描，<context:include-filter>指定的扫描-->
    <context:component-scan base-package="com.escst">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
        <!-- 激活自动代理功能 Aspect切面编程 -->
    <aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true"/>

    <!--扫描redis切面-->
    <!--<context:component-scan base-package="com.escst.redis" use-default-filters="false">-->
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"></context:include-filter>-->
    <!--</context:component-scan>-->

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		  class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
			class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!-- json转换器 -->
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>application/json</value>
						</list>
					</property>
					<property name="features">
						<array>
							<!--
							<value>WriteMapNullValue</value>
							-->
							<value>WriteNullNumberAsZero</value>
							<value>WriteNullListAsEmpty</value>
							<value>WriteNullStringAsEmpty</value>
							<value>WriteNullBooleanAsFalse</value>
							<value>WriteDateUseDateFormat</value>
						</array>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<mvc:annotation-driven />
	
	<!-- 静态资源访问 -->
    <mvc:resources mapping="/resources/**" location="/resources/" />
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
		<!-- 指定所上传文件限制(单位：B)。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="104857600"/>
		<!-- 最大内存大小-->
		<property name="maxInMemorySize" value="1024" />
	</bean>

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/views/error_fileupload.jsp页面 -->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
			</props>
		</property>
	</bean>

	<!--配置拦截器-->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.escst.commons.core.AuthInterceptor">
				<property name="excludeUrls" value="doLogin"/>
				<property name="escstVideoPreviewUrls" value="video/escst"/>
				<property name="resourceUrls" value="resources"/>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>